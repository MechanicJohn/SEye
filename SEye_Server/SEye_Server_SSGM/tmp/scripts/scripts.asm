; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\Admin\Desktop\Projects\SEye_Server\scripts.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	?Timer_Expired@ScriptImpClass@@UAEXPAEH@Z	; ScriptImpClass::Timer_Expired
PUBLIC	?Created@ScriptImpClass@@UAEXPAE@Z		; ScriptImpClass::Created
PUBLIC	??_R4ScriptImpClass@@6B@			; ScriptImpClass::`RTTI Complete Object Locator'
PUBLIC	??_R4GameObjObserverClass@@6B@			; GameObjObserverClass::`RTTI Complete Object Locator'
PUBLIC	??_R4ScriptClass@@6B@				; ScriptClass::`RTTI Complete Object Locator'
PUBLIC	?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ ; ScriptImpClass::Register_Auto_Save_Variables
PUBLIC	?Load_Data@ScriptImpClass@@UAEXAAE@Z		; ScriptImpClass::Load_Data
PUBLIC	?Save_Data@ScriptImpClass@@UAEXAAE@Z		; ScriptImpClass::Save_Data
PUBLIC	?Load@ScriptImpClass@@UAEXAAE@Z			; ScriptImpClass::Load
PUBLIC	?Save@ScriptImpClass@@UAEXAAE@Z			; ScriptImpClass::Save
PUBLIC	?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z ; ScriptImpClass::Get_Parameters_String
PUBLIC	?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z ; ScriptImpClass::Set_Parameters_String
PUBLIC	?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAEXZ	; ScriptImpClass::Get_Owner_Ptr
PUBLIC	?Owner@ScriptImpClass@@UAEPAEXZ			; ScriptImpClass::Owner
PUBLIC	?Exited@ScriptImpClass@@UAEXPAE0@Z		; ScriptImpClass::Exited
PUBLIC	?Entered@ScriptImpClass@@UAEXPAE0@Z		; ScriptImpClass::Entered
PUBLIC	?Poked@ScriptImpClass@@UAEXPAE0@Z		; ScriptImpClass::Poked
PUBLIC	?Animation_Complete@ScriptImpClass@@UAEXPAEPBD@Z ; ScriptImpClass::Animation_Complete
PUBLIC	?Action_Complete@ScriptImpClass@@UAEXPAEHW4ActionCompleteReason@@@Z ; ScriptImpClass::Action_Complete
PUBLIC	?Enemy_Seen@ScriptImpClass@@UAEXPAE0@Z		; ScriptImpClass::Enemy_Seen
PUBLIC	?Sound_Heard@ScriptImpClass@@UAEXPAEABUCombatSound@@@Z ; ScriptImpClass::Sound_Heard
PUBLIC	?Custom@ScriptImpClass@@UAEXPAEHH0@Z		; ScriptImpClass::Custom
PUBLIC	?Damaged@ScriptImpClass@@UAEXPAE0M@Z		; ScriptImpClass::Damaged
PUBLIC	?Killed@ScriptImpClass@@UAEXPAE0@Z		; ScriptImpClass::Killed
PUBLIC	?Destroyed@ScriptImpClass@@UAEXPAE@Z		; ScriptImpClass::Destroyed
PUBLIC	?Detach@ScriptImpClass@@UAEXPAE@Z		; ScriptImpClass::Detach
PUBLIC	?Attach@ScriptImpClass@@UAEXPAE@Z		; ScriptImpClass::Attach
PUBLIC	?Get_Name@ScriptImpClass@@UAEPADXZ		; ScriptImpClass::Get_Name
PUBLIC	??0GameObjObserverClass@@QAE@XZ			; GameObjObserverClass::GameObjObserverClass
PUBLIC	??_GScriptClass@@UAEPAXI@Z			; ScriptClass::`scalar deleting destructor'
PUBLIC	??0ScriptClass@@QAE@XZ				; ScriptClass::ScriptClass
PUBLIC	??1ScriptClass@@UAE@XZ				; ScriptClass::~ScriptClass
PUBLIC	??_GScriptImpClass@@UAEPAXI@Z			; ScriptImpClass::`scalar deleting destructor'
PUBLIC	??_GGameObjObserverClass@@UAEPAXI@Z		; GameObjObserverClass::`scalar deleting destructor'
PUBLIC	?strpbrk@@YAPADPADPBD@Z				; strpbrk
PUBLIC	?RequestDestroyScript@ScriptImpClass@@0P6AXPAVScriptClass@@@ZA ; ScriptImpClass::RequestDestroyScript
PUBLIC	?noparams@@3PADA				; noparams
PUBLIC	??_C@_01IHBHIGKO@?0?$AA@			; `string'
PUBLIC	??_C@_03POJIIFD@?$DN?3?6?$AA@			; `string'
PUBLIC	??_C@_0N@CILGKGLK@critical?4txt?$AA@		; `string'
PUBLIC	??_C@_0CM@KMOCPEFC@Critical?5Scripts?4dll?5error?0param@ ; `string'
PUBLIC	??_C@_08OEKJENGB@?$CFf?5?$CFf?5?$CFf?$AA@	; `string'
PUBLIC	??_7ScriptClass@@6B@				; ScriptClass::`vftable'
PUBLIC	??_7GameObjObserverClass@@6B@			; GameObjObserverClass::`vftable'
PUBLIC	??_7ScriptImpClass@@6B@				; ScriptImpClass::`vftable'
EXTRN	??_EScriptClass@@UAEPAXI@Z:PROC			; ScriptClass::`vector deleting destructor'
EXTRN	??_EScriptImpClass@@UAEPAXI@Z:PROC		; ScriptImpClass::`vector deleting destructor'
EXTRN	??_EGameObjObserverClass@@UAEPAXI@Z:PROC	; GameObjObserverClass::`vector deleting destructor'
EXTRN	_strncpy:PROC
EXTRN	_strpbrk:PROC
EXTRN	_fprintf:PROC
EXTRN	_atoi:PROC
EXTRN	_atof:PROC
EXTRN	_sscanf:PROC
?RequestDestroyScript@ScriptImpClass@@0P6AXPAVScriptClass@@@ZA DD 01H DUP (?) ; ScriptImpClass::RequestDestroyScript
?noparams@@3PADA DD 01H DUP (?)				; noparams
;	COMDAT ??_7ScriptImpClass@@6B@
CONST	SEGMENT
??_7ScriptImpClass@@6B@ DD FLAT:??_R4ScriptImpClass@@6B@ ; ScriptImpClass::`vftable'
	DD	FLAT:??_EScriptImpClass@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPADXZ
	DD	FLAT:?Attach@ScriptImpClass@@UAEXPAE@Z
	DD	FLAT:?Detach@ScriptImpClass@@UAEXPAE@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAE@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAE@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAE0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAE0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAEHH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAEABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAE0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAEHW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAEH@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAEPBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAE0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAE0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAE0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAEXZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAEXZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@UAEXAAE@Z
	DD	FLAT:?Load@ScriptImpClass@@UAEXAAE@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAE@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAE@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_R4ScriptImpClass@@6B@
rdata$r	SEGMENT
??_R4ScriptImpClass@@6B@ DD 00H				; ScriptImpClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVScriptImpClass@@@8
	DD	FLAT:??_R3ScriptImpClass@@8
rdata$r	ENDS
;	COMDAT ??_7GameObjObserverClass@@6B@
CONST	SEGMENT
??_7GameObjObserverClass@@6B@ DD FLAT:??_R4GameObjObserverClass@@6B@ ; GameObjObserverClass::`vftable'
	DD	FLAT:??_EGameObjObserverClass@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_R4GameObjObserverClass@@6B@
rdata$r	SEGMENT
??_R4GameObjObserverClass@@6B@ DD 00H			; GameObjObserverClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVGameObjObserverClass@@@8
	DD	FLAT:??_R3GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_7ScriptClass@@6B@
CONST	SEGMENT
??_7ScriptClass@@6B@ DD FLAT:??_R4ScriptClass@@6B@	; ScriptClass::`vftable'
	DD	FLAT:??_EScriptClass@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_R4ScriptClass@@6B@
rdata$r	SEGMENT
??_R4ScriptClass@@6B@ DD 00H				; ScriptClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVScriptClass@@@8
	DD	FLAT:??_R3ScriptClass@@8
rdata$r	ENDS
;	COMDAT ??_C@_08OEKJENGB@?$CFf?5?$CFf?5?$CFf?$AA@
CONST	SEGMENT
??_C@_08OEKJENGB@?$CFf?5?$CFf?5?$CFf?$AA@ DB '%f %f %f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@KMOCPEFC@Critical?5Scripts?4dll?5error?0param@
CONST	SEGMENT
??_C@_0CM@KMOCPEFC@Critical?5Scripts?4dll?5error?0param@ DB 'Critical Scr'
	DB	'ipts.dll error,parameter is %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CILGKGLK@critical?4txt?$AA@
CONST	SEGMENT
??_C@_0N@CILGKGLK@critical?4txt?$AA@ DB 'critical.txt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03POJIIFD@?$DN?3?6?$AA@
CONST	SEGMENT
??_C@_03POJIIFD@?$DN?3?6?$AA@ DB '=:', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01IHBHIGKO@?0?$AA@
CONST	SEGMENT
??_C@_01IHBHIGKO@?0?$AA@ DB ',', 00H			; `string'
__bad_alloc_Message DD FLAT:??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
PUBLIC	?Get_Parameter@ScriptImpClass@@QAEPBDH@Z	; ScriptImpClass::Get_Parameter
; Function compile flags: /Ogtpy
; File c:\users\admin\desktop\projects\seye_server\scripts.cpp
;	COMDAT ?Get_Parameter@ScriptImpClass@@QAEPBDH@Z
_TEXT	SEGMENT
?Get_Parameter@ScriptImpClass@@QAEPBDH@Z PROC		; ScriptImpClass::Get_Parameter, COMDAT
; _this$ = ecx
; _v$ = eax

; 412  : 	if ((v >= 0) && (v < mArgC))

	test	eax, eax
	jl	SHORT $LN2@Get_Parame
	cmp	eax, DWORD PTR [ecx+12]
	jge	SHORT $LN2@Get_Parame

; 413  : 	{
; 414  : 		return mArgV[v];

	mov	ecx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [ecx+eax*4]

; 419  : 	}
; 420  : }

	ret	0
$LN2@Get_Parame:

; 415  : 	}
; 416  : 	else
; 417  : 	{
; 418  : 		return noparams;

	mov	eax, DWORD PTR ?noparams@@3PADA		; noparams

; 419  : 	}
; 420  : }

	ret	0
?Get_Parameter@ScriptImpClass@@QAEPBDH@Z ENDP		; ScriptImpClass::Get_Parameter
_TEXT	ENDS
PUBLIC	??1GameObjObserverClass@@UAE@XZ			; GameObjObserverClass::~GameObjObserverClass
; Function compile flags: /Ogtpy
;	COMDAT ??1GameObjObserverClass@@UAE@XZ
_TEXT	SEGMENT
??1GameObjObserverClass@@UAE@XZ PROC			; GameObjObserverClass::~GameObjObserverClass, COMDAT
; _this$ = ecx

; 302  : {

	mov	DWORD PTR [ecx], OFFSET ??_7GameObjObserverClass@@6B@

; 303  : }

	ret	0
??1GameObjObserverClass@@UAE@XZ ENDP			; GameObjObserverClass::~GameObjObserverClass
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
_TEXT	SEGMENT
?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ PROC ; ScriptImpClass::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 228  : }

	ret	0
?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ ENDP ; ScriptImpClass::Register_Auto_Save_Variables
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Load_Data@ScriptImpClass@@UAEXAAE@Z
_TEXT	SEGMENT
_loader$ = 8						; size = 4
?Load_Data@ScriptImpClass@@UAEXAAE@Z PROC		; ScriptImpClass::Load_Data, COMDAT
; _this$ = ecx

; 224  : }

	ret	4
?Load_Data@ScriptImpClass@@UAEXAAE@Z ENDP		; ScriptImpClass::Load_Data
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Save_Data@ScriptImpClass@@UAEXAAE@Z
_TEXT	SEGMENT
_saver$ = 8						; size = 4
?Save_Data@ScriptImpClass@@UAEXAAE@Z PROC		; ScriptImpClass::Save_Data, COMDAT
; _this$ = ecx

; 220  : }

	ret	4
?Save_Data@ScriptImpClass@@UAEXAAE@Z ENDP		; ScriptImpClass::Save_Data
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Load@ScriptImpClass@@UAEXAAE@Z
_TEXT	SEGMENT
_x$ = -4						; size = 4
_y$ = 8							; size = 4
_loader$ = 8						; size = 4
?Load@ScriptImpClass@@UAEXAAE@Z PROC			; ScriptImpClass::Load, COMDAT
; _this$ = ecx

; 192  : {

	push	ecx
	push	ebx
	push	edi

; 193  : 	unsigned int x;
; 194  : 	int y;
; 195  : 	SeralizeInfoStr *d;
; 196  : 	while (Commands->Open_Chunk(loader,&x))

	mov	edi, DWORD PTR _loader$[esp+8]
	lea	eax, DWORD PTR _x$[esp+12]
	mov	ebx, ecx
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+352]
	push	eax
	push	edi
	call	edx
	add	esp, 8
	test	al, al
	je	$LN7@Load
	push	esi
	npad	7
$LL8@Load:

; 197  : 	{
; 198  : 		if (x == 0x63736176)

	cmp	DWORD PTR _x$[esp+16], 1668505974	; 63736176H
	jne	SHORT $LN4@Load

; 199  : 		{
; 200  : 			while (Commands->Load_Begin(loader,&y))

	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+328]
	lea	eax, DWORD PTR _y$[esp+12]
	push	eax
	push	edi
	call	edx
	add	esp, 8
	test	al, al
	je	SHORT $LN4@Load
$LL5@Load:

; 201  : 			{
; 202  : 				d = seralizeinfo;

	mov	esi, DWORD PTR [ebx+24]

; 203  : 				while (d)

	test	esi, esi
	je	SHORT $LN2@Load
	npad	4
$LL3@Load:

; 204  : 				{
; 205  : 					if (d->number == y)

	mov	eax, DWORD PTR [esi+8]
	cmp	eax, DWORD PTR _y$[esp+12]
	jne	SHORT $LN1@Load

; 206  : 					{
; 207  : 						Commands->Load_Data(loader,d->size,d->data);

	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	push	ecx
	mov	ecx, DWORD PTR [eax+332]
	push	edx
	push	edi
	call	ecx
	add	esp, 12					; 0000000cH
$LN1@Load:

; 208  : 					}
; 209  : 					d = d->next;

	mov	esi, DWORD PTR [esi+12]
	test	esi, esi
	jne	SHORT $LL3@Load
$LN2@Load:

; 210  : 				}
; 211  : 				Commands->Load_End(loader);

	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+340]
	push	edi
	call	eax
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+328]
	lea	ecx, DWORD PTR _y$[esp+16]
	push	ecx
	push	edi
	call	eax
	add	esp, 12					; 0000000cH
	test	al, al
	jne	SHORT $LL5@Load
$LN4@Load:

; 212  : 			}
; 213  : 		}
; 214  : 		Commands->Close_Chunk(loader);

	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+356]
	push	edi
	call	edx
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+352]
	lea	eax, DWORD PTR _x$[esp+20]
	push	eax
	push	edi
	call	edx
	add	esp, 12					; 0000000cH
	test	al, al
	jne	$LL8@Load
	pop	esi
$LN7@Load:
	pop	edi
	pop	ebx

; 215  : 	}
; 216  : }

	pop	ecx
	ret	4
?Load@ScriptImpClass@@UAEXAAE@Z ENDP			; ScriptImpClass::Load
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Save@ScriptImpClass@@UAEXAAE@Z
_TEXT	SEGMENT
_saver$ = 8						; size = 4
?Save@ScriptImpClass@@UAEXAAE@Z PROC			; ScriptImpClass::Save, COMDAT
; _this$ = ecx

; 180  : 	SeralizeInfoStr *d;
; 181  : 	d = seralizeinfo;
; 182  : 	Commands->Begin_Chunk(saver,0x63736176);

	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	push	esi
	mov	esi, DWORD PTR [ecx+24]
	mov	ecx, DWORD PTR [eax+344]
	push	edi
	mov	edi, DWORD PTR _saver$[esp+4]
	push	1668505974				; 63736176H
	push	edi
	call	ecx
	add	esp, 8

; 183  : 	while (d)

	test	esi, esi
	je	SHORT $LN1@Save
$LL2@Save:

; 184  : 	{
; 185  : 		Commands->Save_Data(saver,d->number,d->size,d->data);

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+8]
	push	edx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	push	eax
	mov	eax, DWORD PTR [edx+320]
	push	ecx
	push	edi
	call	eax

; 186  : 		d = d->next;

	mov	esi, DWORD PTR [esi+12]
	add	esp, 16					; 00000010H
	test	esi, esi
	jne	SHORT $LL2@Save
$LN1@Save:

; 187  : 	}
; 188  : 	Commands->End_Chunk(saver);

	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+348]
	push	edi
	call	edx
	add	esp, 4
	pop	edi
	pop	esi

; 189  : }

	ret	4
?Save@ScriptImpClass@@UAEXAAE@Z ENDP			; ScriptImpClass::Save
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_params$ = 8						; size = 4
_size$ = 12						; size = 4
?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z PROC	; ScriptImpClass::Get_Parameters_String, COMDAT
; _this$ = ecx

; 158  : {

	push	ecx

; 159  : 	*params = 0;

	mov	eax, DWORD PTR _params$[esp]
	push	ebx
	push	ebp

; 160  : 	unsigned int l = 0;

	xor	ebx, ebx
	mov	BYTE PTR [eax], 0

; 161  : 	for (int i = 0; i < mArgC; i++)

	xor	ebp, ebp
	cmp	DWORD PTR [ecx+12], ebx
	mov	DWORD PTR _this$[esp+12], ecx
	jle	$LN14@Get_Parame@2
	push	esi
	push	edi
	npad	3
$LL6@Get_Parame@2:

; 162  : 	{
; 163  : 		if (l >= size)

	cmp	ebx, DWORD PTR _size$[esp+16]
	jae	$LN21@Get_Parame@2

; 164  : 			return;
; 165  : 		if (i > 0)

	test	ebp, ebp
	jle	SHORT $LN23@Get_Parame@2

; 166  : 		{
; 167  : 			l++;
; 168  : 			strcat(params,",");

	mov	edi, DWORD PTR _params$[esp+16]
	inc	ebx
	dec	edi
$LL16@Get_Parame@2:
	mov	al, BYTE PTR [edi+1]
	inc	edi
	test	al, al
	jne	SHORT $LL16@Get_Parame@2
	mov	dx, WORD PTR ??_C@_01IHBHIGKO@?0?$AA@
	mov	WORD PTR [edi], dx

; 169  : 		}
; 170  : 		const char *s = Get_Parameter(i);

	test	ebp, ebp
$LN23@Get_Parame@2:
	jl	SHORT $LN10@Get_Parame@2
	cmp	ebp, DWORD PTR [ecx+12]
	jge	SHORT $LN10@Get_Parame@2
	mov	eax, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [eax+ebp*4]
	jmp	SHORT $LN9@Get_Parame@2
$LN10@Get_Parame@2:
	mov	eax, DWORD PTR ?noparams@@3PADA		; noparams
$LN9@Get_Parame@2:

; 171  : 		l += strlen(s);

	mov	ecx, eax
	lea	esi, DWORD PTR [ecx+1]
$LL17@Get_Parame@2:
	mov	dl, BYTE PTR [ecx]
	inc	ecx
	test	dl, dl
	jne	SHORT $LL17@Get_Parame@2
	sub	ecx, esi
	add	ebx, ecx

; 172  : 		if (l > size)

	cmp	ebx, DWORD PTR _size$[esp+16]
	ja	SHORT $LN5@Get_Parame@2

; 173  : 			continue;
; 174  : 		strcat(params,s);

	mov	ecx, eax
$LL18@Get_Parame@2:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL18@Get_Parame@2
	mov	edi, DWORD PTR _params$[esp+16]
	sub	eax, ecx
	mov	esi, ecx
	dec	edi
$LL19@Get_Parame@2:
	mov	cl, BYTE PTR [edi+1]
	inc	edi
	test	cl, cl
	jne	SHORT $LL19@Get_Parame@2
	mov	ecx, eax
	shr	ecx, 2
	rep movsd
	mov	ecx, eax
	and	ecx, 3
	rep movsb
$LN5@Get_Parame@2:
	mov	ecx, DWORD PTR _this$[esp+20]
	inc	ebp
	cmp	ebp, DWORD PTR [ecx+12]
	jl	$LL6@Get_Parame@2
$LN21@Get_Parame@2:
	pop	edi
	pop	esi
$LN14@Get_Parame@2:
	pop	ebp
	pop	ebx

; 175  : 	}
; 176  : }

	pop	ecx
	ret	8
?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z ENDP	; ScriptImpClass::Get_Parameters_String
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAEXZ
_TEXT	SEGMENT
?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAEXZ PROC		; ScriptImpClass::Get_Owner_Ptr, COMDAT
; _this$ = ecx

; 115  : 	return &Attached;

	lea	eax, DWORD PTR [ecx+8]

; 116  : }

	ret	0
?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAEXZ ENDP		; ScriptImpClass::Get_Owner_Ptr
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Owner@ScriptImpClass@@UAEPAEXZ
_TEXT	SEGMENT
?Owner@ScriptImpClass@@UAEPAEXZ PROC			; ScriptImpClass::Owner, COMDAT
; _this$ = ecx

; 110  : 	return Attached;

	mov	eax, DWORD PTR [ecx+8]

; 111  : }

	ret	0
?Owner@ScriptImpClass@@UAEPAEXZ ENDP			; ScriptImpClass::Owner
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Exited@ScriptImpClass@@UAEXPAE0@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_exit$ = 12						; size = 4
?Exited@ScriptImpClass@@UAEXPAE0@Z PROC			; ScriptImpClass::Exited, COMDAT
; _this$ = ecx

; 106  : }

	ret	8
?Exited@ScriptImpClass@@UAEXPAE0@Z ENDP			; ScriptImpClass::Exited
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Entered@ScriptImpClass@@UAEXPAE0@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_enter$ = 12						; size = 4
?Entered@ScriptImpClass@@UAEXPAE0@Z PROC		; ScriptImpClass::Entered, COMDAT
; _this$ = ecx

; 102  : }

	ret	8
?Entered@ScriptImpClass@@UAEXPAE0@Z ENDP		; ScriptImpClass::Entered
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Poked@ScriptImpClass@@UAEXPAE0@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_poker$ = 12						; size = 4
?Poked@ScriptImpClass@@UAEXPAE0@Z PROC			; ScriptImpClass::Poked, COMDAT
; _this$ = ecx

; 98   : }

	ret	8
?Poked@ScriptImpClass@@UAEXPAE0@Z ENDP			; ScriptImpClass::Poked
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Animation_Complete@ScriptImpClass@@UAEXPAEPBD@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_anim$ = 12						; size = 4
?Animation_Complete@ScriptImpClass@@UAEXPAEPBD@Z PROC	; ScriptImpClass::Animation_Complete, COMDAT
; _this$ = ecx

; 94   : }

	ret	8
?Animation_Complete@ScriptImpClass@@UAEXPAEPBD@Z ENDP	; ScriptImpClass::Animation_Complete
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Timer_Expired@ScriptImpClass@@UAEXPAEH@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@ScriptImpClass@@UAEXPAEH@Z PROC		; ScriptImpClass::Timer_Expired, COMDAT
; _this$ = ecx

; 90   : }

	ret	8
?Timer_Expired@ScriptImpClass@@UAEXPAEH@Z ENDP		; ScriptImpClass::Timer_Expired
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Enemy_Seen@ScriptImpClass@@UAEXPAE0@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_seen$ = 12						; size = 4
?Enemy_Seen@ScriptImpClass@@UAEXPAE0@Z PROC		; ScriptImpClass::Enemy_Seen, COMDAT
; _this$ = ecx

; 86   : }

	ret	8
?Enemy_Seen@ScriptImpClass@@UAEXPAE0@Z ENDP		; ScriptImpClass::Enemy_Seen
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Action_Complete@ScriptImpClass@@UAEXPAEHW4ActionCompleteReason@@@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_action$ = 12						; size = 4
_reason$ = 16						; size = 4
?Action_Complete@ScriptImpClass@@UAEXPAEHW4ActionCompleteReason@@@Z PROC ; ScriptImpClass::Action_Complete, COMDAT
; _this$ = ecx

; 82   : }

	ret	12					; 0000000cH
?Action_Complete@ScriptImpClass@@UAEXPAEHW4ActionCompleteReason@@@Z ENDP ; ScriptImpClass::Action_Complete
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Custom@ScriptImpClass@@UAEXPAEHH0@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_message$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@ScriptImpClass@@UAEXPAEHH0@Z PROC		; ScriptImpClass::Custom, COMDAT
; _this$ = ecx

; 78   : }

	ret	16					; 00000010H
?Custom@ScriptImpClass@@UAEXPAEHH0@Z ENDP		; ScriptImpClass::Custom
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Sound_Heard@ScriptImpClass@@UAEXPAEABUCombatSound@@@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_sound$ = 12						; size = 4
?Sound_Heard@ScriptImpClass@@UAEXPAEABUCombatSound@@@Z PROC ; ScriptImpClass::Sound_Heard, COMDAT
; _this$ = ecx

; 74   : }

	ret	8
?Sound_Heard@ScriptImpClass@@UAEXPAEABUCombatSound@@@Z ENDP ; ScriptImpClass::Sound_Heard
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Killed@ScriptImpClass@@UAEXPAE0@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_shooter$ = 12						; size = 4
?Killed@ScriptImpClass@@UAEXPAE0@Z PROC			; ScriptImpClass::Killed, COMDAT
; _this$ = ecx

; 70   : }

	ret	8
?Killed@ScriptImpClass@@UAEXPAE0@Z ENDP			; ScriptImpClass::Killed
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Damaged@ScriptImpClass@@UAEXPAE0M@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
_damage$ = 16						; size = 4
?Damaged@ScriptImpClass@@UAEXPAE0M@Z PROC		; ScriptImpClass::Damaged, COMDAT
; _this$ = ecx

; 66   : }

	ret	12					; 0000000cH
?Damaged@ScriptImpClass@@UAEXPAE0M@Z ENDP		; ScriptImpClass::Damaged
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Destroyed@ScriptImpClass@@UAEXPAE@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
?Destroyed@ScriptImpClass@@UAEXPAE@Z PROC		; ScriptImpClass::Destroyed, COMDAT
; _this$ = ecx

; 62   : }

	ret	4
?Destroyed@ScriptImpClass@@UAEXPAE@Z ENDP		; ScriptImpClass::Destroyed
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Created@ScriptImpClass@@UAEXPAE@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
?Created@ScriptImpClass@@UAEXPAE@Z PROC			; ScriptImpClass::Created, COMDAT
; _this$ = ecx

; 58   : }

	ret	4
?Created@ScriptImpClass@@UAEXPAE@Z ENDP			; ScriptImpClass::Created
_TEXT	ENDS
PUBLIC	?Destroy_Script@ScriptImpClass@@QAEXXZ		; ScriptImpClass::Destroy_Script
; Function compile flags: /Ogtpy
;	COMDAT ?Destroy_Script@ScriptImpClass@@QAEXXZ
_TEXT	SEGMENT
?Destroy_Script@ScriptImpClass@@QAEXXZ PROC		; ScriptImpClass::Destroy_Script, COMDAT
; _this$ = ecx

; 44   : 	if (RequestDestroyScript)

	mov	eax, DWORD PTR ?RequestDestroyScript@ScriptImpClass@@0P6AXPAVScriptClass@@@ZA ; ScriptImpClass::RequestDestroyScript
	test	eax, eax
	je	SHORT $LN1@Destroy_Sc

; 45   : 	{
; 46   : 		(RequestDestroyScript) (this);

	push	ecx
	call	eax
	pop	ecx
$LN1@Destroy_Sc:

; 47   : 	}
; 48   : }

	ret	0
?Destroy_Script@ScriptImpClass@@QAEXXZ ENDP		; ScriptImpClass::Destroy_Script
_TEXT	ENDS
PUBLIC	?Set_Request_Destroy_Func@ScriptImpClass@@SAXP6AXPAVScriptClass@@@Z@Z ; ScriptImpClass::Set_Request_Destroy_Func
; Function compile flags: /Ogtpy
;	COMDAT ?Set_Request_Destroy_Func@ScriptImpClass@@SAXP6AXPAVScriptClass@@@Z@Z
_TEXT	SEGMENT
?Set_Request_Destroy_Func@ScriptImpClass@@SAXP6AXPAVScriptClass@@@Z@Z PROC ; ScriptImpClass::Set_Request_Destroy_Func, COMDAT
; _Func$ = eax

; 39   : 	RequestDestroyScript = Func;

	mov	DWORD PTR ?RequestDestroyScript@ScriptImpClass@@0P6AXPAVScriptClass@@@ZA, eax ; ScriptImpClass::RequestDestroyScript

; 40   : }

	ret	0
?Set_Request_Destroy_Func@ScriptImpClass@@SAXP6AXPAVScriptClass@@@Z@Z ENDP ; ScriptImpClass::Set_Request_Destroy_Func
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Attach@ScriptImpClass@@UAEXPAE@Z
_TEXT	SEGMENT
_newobj$ = 8						; size = 4
?Attach@ScriptImpClass@@UAEXPAE@Z PROC			; ScriptImpClass::Attach, COMDAT
; _this$ = ecx

; 34   : 	Attached = newobj;

	mov	eax, DWORD PTR _newobj$[esp-4]
	mov	DWORD PTR [ecx+8], eax

; 35   : }

	ret	4
?Attach@ScriptImpClass@@UAEXPAE@Z ENDP			; ScriptImpClass::Attach
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0GameObjObserverClass@@QAE@XZ
_TEXT	SEGMENT
??0GameObjObserverClass@@QAE@XZ PROC			; GameObjObserverClass::GameObjObserverClass, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], OFFSET ??_7GameObjObserverClass@@6B@
	ret	0
??0GameObjObserverClass@@QAE@XZ ENDP			; GameObjObserverClass::GameObjObserverClass
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1ScriptClass@@UAE@XZ
_TEXT	SEGMENT
??1ScriptClass@@UAE@XZ PROC				; ScriptClass::~ScriptClass, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], OFFSET ??_7GameObjObserverClass@@6B@
	ret	0
??1ScriptClass@@UAE@XZ ENDP				; ScriptClass::~ScriptClass
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0ScriptClass@@QAE@XZ
_TEXT	SEGMENT
??0ScriptClass@@QAE@XZ PROC				; ScriptClass::ScriptClass, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], OFFSET ??_7ScriptClass@@6B@
	ret	0
??0ScriptClass@@QAE@XZ ENDP				; ScriptClass::ScriptClass
_TEXT	ENDS
PUBLIC	??0ScriptImpClass@@QAE@XZ			; ScriptImpClass::ScriptImpClass
; Function compile flags: /Ogtpy
;	COMDAT ??0ScriptImpClass@@QAE@XZ
_TEXT	SEGMENT
??0ScriptImpClass@@QAE@XZ PROC				; ScriptImpClass::ScriptImpClass, COMDAT
; _this$ = eax

; 20   : 	ObserverID = 0;

	xor	ecx, ecx
	mov	DWORD PTR [eax], OFFSET ??_7ScriptImpClass@@6B@
	mov	DWORD PTR [eax+4], ecx

; 21   : 	Attached = 0;

	mov	DWORD PTR [eax+8], ecx

; 22   : 	mArgC = 0;

	mov	DWORD PTR [eax+12], ecx

; 23   : 	mArgV = 0;

	mov	DWORD PTR [eax+16], ecx

; 24   : 	seralizeinfo = 0;

	mov	DWORD PTR [eax+24], ecx

; 25   : }

	ret	0
??0ScriptImpClass@@QAE@XZ ENDP				; ScriptImpClass::ScriptImpClass
PUBLIC	?Clear_Parameters@ScriptImpClass@@QAEXXZ	; ScriptImpClass::Clear_Parameters
; Function compile flags: /Ogtpy
;	COMDAT ?Clear_Parameters@ScriptImpClass@@QAEXXZ
_TEXT	SEGMENT
?Clear_Parameters@ScriptImpClass@@QAEXXZ PROC		; ScriptImpClass::Clear_Parameters, COMDAT
; _this$ = esi

; 306  : {

	push	edi

; 307  : 	if (mArgV)

	xor	edi, edi
	cmp	DWORD PTR [esi+16], edi
	je	SHORT $LN13@Clear_Para@2

; 308  : 	{
; 309  : 		while (mArgC--)

	cmp	DWORD PTR [esi+12], edi
	je	SHORT $LN12@Clear_Para@2
	npad	3
$LL3@Clear_Para@2:
	dec	DWORD PTR [esi+12]
	mov	eax, DWORD PTR [esi+12]

; 310  : 		{
; 311  : 			if (mArgV[mArgC])

	mov	ecx, DWORD PTR [esi+16]
	cmp	DWORD PTR [ecx+eax*4], edi
	lea	eax, DWORD PTR [ecx+eax*4]
	je	SHORT $LN7@Clear_Para@2

; 312  : 				delete[] mArgV[mArgC];

	mov	edx, DWORD PTR [eax]
	push	edx
	call	DWORD PTR ?RenVecDelete@@3P6AXPAX@ZA	; RenVecDelete
	add	esp, 4
$LN7@Clear_Para@2:

; 308  : 	{
; 309  : 		while (mArgC--)

	cmp	DWORD PTR [esi+12], edi
	jne	SHORT $LL3@Clear_Para@2
$LN12@Clear_Para@2:

; 313  : 		}
; 314  : 		delete[] mArgV;

	mov	eax, DWORD PTR [esi+16]
	dec	DWORD PTR [esi+12]
	push	eax
	call	DWORD PTR ?RenVecDelete@@3P6AXPAX@ZA	; RenVecDelete
	add	esp, 4
$LN13@Clear_Para@2:

; 315  : 	}
; 316  : 	mArgV = 0;
; 317  : 	mArgC = 0;

	mov	DWORD PTR [esi+12], edi
	mov	DWORD PTR [esi+16], edi
	pop	edi

; 318  : }

	ret	0
?Clear_Parameters@ScriptImpClass@@QAEXXZ ENDP		; ScriptImpClass::Clear_Parameters
_TEXT	ENDS
PUBLIC	??1ScriptImpClass@@UAE@XZ			; ScriptImpClass::~ScriptImpClass
; Function compile flags: /Ogtpy
;	COMDAT ??1ScriptImpClass@@UAE@XZ
_TEXT	SEGMENT
??1ScriptImpClass@@UAE@XZ PROC				; ScriptImpClass::~ScriptImpClass, COMDAT
; _this$ = esi

; 288  : 	while (seralizeinfo)

	cmp	DWORD PTR [esi+24], 0
	mov	DWORD PTR [esi], OFFSET ??_7ScriptImpClass@@6B@
	je	SHORT $LN4@ScriptImpC
	npad	4
$LL5@ScriptImpC:

; 289  : 	{
; 290  : 		SeralizeInfoStr *s = seralizeinfo;

	mov	eax, DWORD PTR [esi+24]

; 291  : 		seralizeinfo = s->next;

	mov	ecx, DWORD PTR [eax+12]

; 292  : 		delete s;

	push	eax
	mov	DWORD PTR [esi+24], ecx
	call	DWORD PTR ?RenDelete@@3P6AXPAX@ZA	; RenDelete
	add	esp, 4
	cmp	DWORD PTR [esi+24], 0
	jne	SHORT $LL5@ScriptImpC
$LN4@ScriptImpC:
	push	edi

; 293  : 	}
; 294  : 	for (int i = 0;i < mArgC;i++)

	xor	edi, edi
	cmp	DWORD PTR [esi+12], edi
	jle	SHORT $LN1@ScriptImpC
$LL3@ScriptImpC:

; 295  : 	{
; 296  : 		delete[] mArgV[i];

	mov	edx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [edx+edi*4]
	push	eax
	call	DWORD PTR ?RenVecDelete@@3P6AXPAX@ZA	; RenVecDelete
	inc	edi
	add	esp, 4
	cmp	edi, DWORD PTR [esi+12]
	jl	SHORT $LL3@ScriptImpC
$LN1@ScriptImpC:

; 297  : 	}
; 298  : 	delete[] mArgV;

	mov	ecx, DWORD PTR [esi+16]
	push	ecx
	call	DWORD PTR ?RenVecDelete@@3P6AXPAX@ZA	; RenVecDelete
	add	esp, 4

; 299  : }

	mov	DWORD PTR [esi], OFFSET ??_7GameObjObserverClass@@6B@
	pop	edi
	ret	0
??1ScriptImpClass@@UAE@XZ ENDP				; ScriptImpClass::~ScriptImpClass
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Detach@ScriptImpClass@@UAEXPAE@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
?Detach@ScriptImpClass@@UAEXPAE@Z PROC			; ScriptImpClass::Detach, COMDAT
; _this$ = ecx

; 52   : 	Attached = 0;
; 53   : 	Destroy_Script();

	mov	eax, DWORD PTR ?RequestDestroyScript@ScriptImpClass@@0P6AXPAVScriptClass@@@ZA ; ScriptImpClass::RequestDestroyScript
	mov	DWORD PTR [ecx+8], 0
	test	eax, eax
	je	SHORT $LN3@Detach
	push	ecx
	call	eax
	pop	ecx
$LN3@Detach:

; 54   : }

	ret	4
?Detach@ScriptImpClass@@UAEXPAE@Z ENDP			; ScriptImpClass::Detach
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Get_Name@ScriptImpClass@@UAEPADXZ
_TEXT	SEGMENT
?Get_Name@ScriptImpClass@@UAEPADXZ PROC			; ScriptImpClass::Get_Name, COMDAT
; _this$ = ecx

; 29   : 	return Factory->GetName();

	mov	eax, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [eax+8]

; 30   : }

	ret	0
?Get_Name@ScriptImpClass@@UAEPADXZ ENDP			; ScriptImpClass::Get_Name
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GGameObjObserverClass@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GGameObjObserverClass@@UAEPAXI@Z PROC		; GameObjObserverClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7GameObjObserverClass@@6B@
	je	SHORT $LN8@scalar@2
	push	esi
	call	DWORD PTR ?RenDelete@@3P6AXPAX@ZA	; RenDelete
	add	esp, 4
$LN8@scalar@2:
	mov	eax, esi
	pop	esi
	ret	4
??_GGameObjObserverClass@@UAEPAXI@Z ENDP		; GameObjObserverClass::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GScriptClass@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GScriptClass@@UAEPAXI@Z PROC				; ScriptClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7GameObjObserverClass@@6B@
	je	SHORT $LN10@scalar@3
	push	esi
	call	DWORD PTR ?RenDelete@@3P6AXPAX@ZA	; RenDelete
	add	esp, 4
$LN10@scalar@3:
	mov	eax, esi
	pop	esi
	ret	4
??_GScriptClass@@UAEPAXI@Z ENDP				; ScriptClass::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GScriptImpClass@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GScriptImpClass@@UAEPAXI@Z PROC			; ScriptImpClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar@4
	push	esi
	call	DWORD PTR ?RenDelete@@3P6AXPAX@ZA	; RenDelete
	add	esp, 4
$LN6@scalar@4:
	mov	eax, esi
	pop	esi
	ret	4
??_GScriptImpClass@@UAEPAXI@Z ENDP			; ScriptImpClass::`scalar deleting destructor'
PUBLIC	?Set_Parameter@ScriptImpClass@@QAEXHPBD@Z	; ScriptImpClass::Set_Parameter
; Function compile flags: /Ogtpy
;	COMDAT ?Set_Parameter@ScriptImpClass@@QAEXHPBD@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pos$ = 12						; size = 4
_v$ = 16						; size = 4
?Set_Parameter@ScriptImpClass@@QAEXHPBD@Z PROC		; ScriptImpClass::Set_Parameter, COMDAT

; 402  : {

	push	ebx
	mov	ebx, DWORD PTR _pos$[esp]
	push	ebp
	mov	ebp, DWORD PTR _this$[esp+4]

; 403  : 	if (mArgV[pos])

	mov	eax, DWORD PTR [ebp+16]
	cmp	DWORD PTR [eax+ebx*4], 0
	lea	eax, DWORD PTR [eax+ebx*4]
	push	esi
	push	edi
	je	SHORT $LN4@Set_Parame

; 404  : 	{
; 405  : 		delete[] mArgV[pos];

	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR ?RenVecDelete@@3P6AXPAX@ZA	; RenVecDelete
	add	esp, 4
$LN4@Set_Parame:

; 406  : 	}
; 407  : 	mArgV[pos] = newstr(v);

	mov	eax, DWORD PTR _v$[esp+12]
	lea	edx, DWORD PTR [eax+1]
	npad	5
$LL11@Set_Parame:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL11@Set_Parame
	sub	eax, edx
	cmp	DWORD PTR ?RenNew@@3P6APAXK@ZA, 0	; RenNew
	lea	edi, DWORD PTR [eax+1]
	jne	SHORT $LN8@Set_Parame
	call	?InitEngine@@YAXXZ			; InitEngine
$LN8@Set_Parame:
	push	edi
	call	DWORD PTR ?RenNew@@3P6APAXK@ZA		; RenNew
	mov	edx, DWORD PTR _v$[esp+16]
	push	edi
	mov	esi, eax
	push	edx
	push	esi
	call	_memcpy
	mov	eax, DWORD PTR [ebp+16]
	add	esp, 16					; 00000010H
	pop	edi
	mov	DWORD PTR [eax+ebx*4], esi
	pop	esi
	pop	ebp
	pop	ebx

; 408  : }

	ret	12					; 0000000cH
?Set_Parameter@ScriptImpClass@@QAEXHPBD@Z ENDP		; ScriptImpClass::Set_Parameter
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
_TEXT	SEGMENT
_params$ = 8						; size = 4
?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z PROC	; ScriptImpClass::Set_Parameters_String, COMDAT
; _this$ = ecx

; 119  : {

	push	esi
	push	edi

; 120  : 	if (!params || !*params)

	mov	edi, DWORD PTR _params$[esp+4]
	mov	esi, ecx
	test	edi, edi
	je	$LN12@Set_Parame@2
	cmp	BYTE PTR [edi], 0
	je	$LN12@Set_Parame@2

; 121  : 		return;
; 122  : 	Get_Name();

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	push	ebx
	push	ebp
	call	edx

; 123  : 	char *a = newstr(params);

	push	edi
	call	?newstr@@YAPADPBD@Z			; newstr
	add	esp, 4
	mov	ebp, eax

; 124  : 	if (a[strlen(a) - 1] == '\n')

	lea	edx, DWORD PTR [eax+1]
$LL26@Set_Parame@2:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL26@Set_Parame@2
	sub	eax, edx
	cmp	BYTE PTR [eax+ebp-1], 10		; 0000000aH
	jne	SHORT $LN11@Set_Parame@2

; 125  : 		a[strlen(a) - 1] = 0;

	mov	eax, ebp
	lea	edx, DWORD PTR [eax+1]
$LL27@Set_Parame@2:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL27@Set_Parame@2
	sub	eax, edx
	mov	BYTE PTR [eax+ebp-1], cl
$LN11@Set_Parame@2:

; 126  : 	int b = 1;
; 127  : 	{
; 128  : 		for (const char *r = a; *r;)

	cmp	BYTE PTR [ebp], 0
	mov	edi, 1
	mov	eax, ebp
	je	SHORT $LN9@Set_Parame@2
	npad	1
$LL10@Set_Parame@2:

; 129  : 		{
; 130  : 			if (*r++ == ',')

	mov	cl, BYTE PTR [eax]
	inc	eax
	cmp	cl, 44					; 0000002cH
	jne	SHORT $LN8@Set_Parame@2

; 131  : 				b++;

	inc	edi
$LN8@Set_Parame@2:

; 126  : 	int b = 1;
; 127  : 	{
; 128  : 		for (const char *r = a; *r;)

	cmp	BYTE PTR [eax], 0
	jne	SHORT $LL10@Set_Parame@2
$LN9@Set_Parame@2:

; 132  : 		}
; 133  : 	}
; 134  : 	Clear_Parameters();

	call	?Clear_Parameters@ScriptImpClass@@QAEXXZ ; ScriptImpClass::Clear_Parameters

; 135  : 	mArgC = b;
; 136  : 	mArgV = new char *[b];

	xor	ebx, ebx
	mov	eax, edi
	mov	edx, 4
	mul	edx
	seto	bl
	mov	DWORD PTR [esi+12], edi
	neg	ebx
	or	ebx, eax
	cmp	DWORD PTR ?RenVecNew@@3P6APAXK@ZA, 0	; RenVecNew
	jne	SHORT $LN16@Set_Parame@2
	call	?InitEngine@@YAXXZ			; InitEngine
$LN16@Set_Parame@2:
	push	ebx
	call	DWORD PTR ?RenVecNew@@3P6APAXK@ZA	; RenVecNew

; 137  : 	memset(mArgV,0,b << 2);

	lea	ecx, DWORD PTR [edi*4]
	push	ecx
	push	0
	push	eax
	mov	DWORD PTR [esi+16], eax
	call	_memset

; 138  : 	memcpy(a,params,strlen(params));

	mov	edi, DWORD PTR _params$[esp+28]
	mov	eax, edi
	add	esp, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+1]
	npad	4
$LL28@Set_Parame@2:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL28@Set_Parame@2
	sub	eax, ecx
	push	eax
	push	edi
	push	ebp
	call	_memcpy

; 139  : 	int i = 0;

	xor	ebx, ebx
	add	esp, 12					; 0000000cH

; 140  : 	for (char *r = a; *r; i++)

	mov	eax, ebp
	cmp	BYTE PTR [ebp], bl
	je	SHORT $LN5@Set_Parame@2
	npad	3
$LL7@Set_Parame@2:

; 141  : 	{
; 142  : 		char *r2 = r;
; 143  : 		while (*r2 && *r2 != ',')

	cmp	BYTE PTR [eax], 0
	mov	edi, eax
	je	SHORT $LN3@Set_Parame@2
$LL4@Set_Parame@2:
	cmp	BYTE PTR [edi], 44			; 0000002cH
	je	SHORT $LN3@Set_Parame@2

; 144  : 			r2++;

	inc	edi
	cmp	BYTE PTR [edi], 0
	jne	SHORT $LL4@Set_Parame@2
$LN3@Set_Parame@2:

; 145  : 		if (*r2)

	cmp	BYTE PTR [edi], 0
	je	SHORT $LN29@Set_Parame@2

; 146  : 			*r2++ = 0;

	mov	BYTE PTR [edi], 0
	inc	edi
$LN29@Set_Parame@2:

; 147  : 		Set_Parameter(i,r);

	push	eax
	push	ebx
	push	esi
	call	?Set_Parameter@ScriptImpClass@@QAEXHPBD@Z ; ScriptImpClass::Set_Parameter
	inc	ebx
	cmp	BYTE PTR [edi], 0

; 148  : 		r = r2;

	mov	eax, edi
	jne	SHORT $LL7@Set_Parame@2
$LN5@Set_Parame@2:

; 149  : 	}
; 150  : 	if (mArgC != i) // never true

	cmp	DWORD PTR [esi+12], ebx
	je	SHORT $LN1@Set_Parame@2

; 151  : 	{
; 152  : 		Set_Parameter(i,noparams);

	mov	edx, DWORD PTR ?noparams@@3PADA		; noparams
	push	edx
	push	ebx
	push	esi
	call	?Set_Parameter@ScriptImpClass@@QAEXHPBD@Z ; ScriptImpClass::Set_Parameter
$LN1@Set_Parame@2:

; 153  : 	}
; 154  : 	delete[] a;

	push	ebp
	call	DWORD PTR ?RenVecDelete@@3P6AXPAX@ZA	; RenVecDelete
	add	esp, 4
	pop	ebp
	pop	ebx
$LN12@Set_Parame@2:
	pop	edi
	pop	esi

; 155  : }

	ret	4
?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z ENDP	; ScriptImpClass::Set_Parameters_String
END
